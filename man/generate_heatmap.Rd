% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/heatmaps.R
\name{generate_heatmap}
\alias{generate_heatmap}
\title{easier heatmaps}
\usage{
generate_heatmap(matrix_data, color_values, title = "",
  row_color_data = NULL, row_color_list, col_color_data = NULL,
  col_color_list, ...)
}
\arguments{
\item{matrix_data}{the matrix you want to plot as a heatmap}

\item{color_values}{the color mapping of values to colors (see Details)}

\item{row_color_data}{data for row annotations}

\item{row_color_list}{list for row annotations}

\item{col_color_data}{data for column annotations}

\item{col_color_list}{list for column annotations}
}
\description{
rolls some of the common \code{Heatmap} options into a single function call
to make life easier when creating lots of heatmaps. \strong{Note:} this function
does \emph{reorder} the rows or columns of the matrix before visualization,
the order going in is what will be presented.
}
\details{
This function uses the \code{ComplexHeatmap} package to produce
heatmaps with complex row- and column-color annotations. Both \code{row_color_data}
and \code{col_color_data} should be \code{data.frame}'s where each column describes
meta-data about the rows or columns of the matrix. The \code{row_color_list} and
\code{col_color_list} provide the mapping of color to annotation, where each
\code{list} entry should be a named vector of colors, with the list entry
corresponding to a column entry in the data.frame, and the names of the colors
corresponding to annotations in that column.
}
\examples{
\dontrun{
library(circlize)
colormap <- colorRamp2(c(-1, 0, 1), c("blue", "white", "red"))
mat <- matrix(rnorm(100, sd = 0.5), 10, 10)
rownames(mat) <- colnames(mat) <- letters[1:10]

meta_data <- data.frame(grp = rep(c("grp1", "grp2"), each = 5),
                        set = c(rep("set1", 3), rep("set2", 7)))
annotation_color <- c(grp1 = "green", grp2 = "red", set1 = "blue",
                      set2 = "yellow")

row_data <- meta_data[, "grp", drop = FALSE]
col_data <- meta_data[, "set", drop = FALSE]
row_annotation = list(grp = annotation_color[1:2])
col_annotation = list(set = annotation_color[3:4])

generate_heatmap(mat, colormap, row_color_data = row_data, row_color_list = row_annotation,
                 col_color_data = col_data, col_color_list = col_annotation)

reorder_sim <- similarity_reorderbyclass(mat, transform = "sub_1")
row_dat2 <- row_data[reorder_sim, , drop=FALSE]
col_dat2 <- col_data[reorder_sim, , drop=FALSE]
generate_heatmap(mat, colormap, "reorder1", row_data, row_annotation, col_data, col_annotation,
                 reorder_sim, reorder_sim)

sample_classes <- split(rownames(mat), row_data$grp)
reorder_sim2 <- similarity_reorderbyclass(mat, sample_classes)
generate_heatmap(mat, colormap, "reorder2", row_data, row_annotation, col_data, col_annotation,
                 reorder_sim2, reorder_sim2)
}
}

